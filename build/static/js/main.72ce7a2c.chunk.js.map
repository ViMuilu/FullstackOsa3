{"version":3,"sources":["services/persons.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Filterform","props","value","newFilter","onChange","filter","Addform","onSubmit","addName","newName","handleNameChange","newNum","handleNumChange","type","NameListForm","map","person","name","number","onClick","delName","Notification","message","className","App","useState","persons","setPersons","setNewName","setNewNum","setFilter","errorMessage","setErrorMessage","useEffect","personService","initialPersons","toLowerCase","includes","event","target","preventDefault","nameObj","window","confirm","returnedPerson","setTimeout","updateNumber","find","p","concat","catch","error","alert","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72ce7a2c.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n  }\n  \n  const create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n  }\n  const update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n  }\n  const del = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n  }\n\nexport default { \n    getAll, \n    create, \n    update,\n    del \n}","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport './index.css'\n\nconst Filterform = (props) => (\n  <form >\n    Filter:<input value={props.newFilter}\n      onChange={props.filter} />\n  </form>\n)\nconst Addform = (props) => (\n\n  <form onSubmit={props.addName}>\n    <div>\n      name: <input\n        value={props.newName}\n        onChange={props.handleNameChange} />\n    </div>\n    <div>number: <input\n      value={props.newNum}\n      onChange={props.handleNumChange} />\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n\n)\nconst NameListForm = (props) => (\n  <form >\n    <div>\n      {props.filter.map(person => <p key={person.name}>\n        {person.name} {person.number} <button onClick ={() =>props.delName(person.name)}>Del</button></p>)}\n    </div>\n  </form>\n)\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNum, setNewNum] = useState('')\n  const [newFilter, setFilter] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  \n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const updateNumber = (id, nameObj) => {\n    personService\n    .update(id,nameObj)\n    .then(returnedPerson => {\n      setPersons(persons.map(person => person.id !== id ? person : returnedPerson))\n    })\n    setErrorMessage(\n      `Changed number of ${nameObj.name}`\n    )\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 5000)\n  }\n  const addName = (event) => {\n    event.preventDefault()\n    const nameObj = {\n      name: newName\n      , number: newNum\n    }\n    if (persons.map(person => person.name).includes(newName)) {\n      if(window.confirm(`${newName} already exists do you want to change cuurent number to a new number`)){\n        const p = persons.find(p => p.name === newName)\n        updateNumber(p.id, nameObj)\n        \n      }\n    } else {\n      personService\n        .create(nameObj)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n        })\n        setErrorMessage(\n          `Added ${newName}`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n    }\n    setNewNum('')\n    setNewName('')\n  }\n  const delName = name => {\n\n    const person = persons.find(p => p.name === name)\n    if (window.confirm(`Delete${name}`)) {\n      personService\n        .del(person.id)\n        .catch(error => {\n          alert(\n            `the'${person.name}' was already deleted from server`\n          )\n          setPersons(persons.filter(p => p.id !== persons.id))\n        })\n        setErrorMessage(\n          `Deleted ${name}`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n    }\n  }\n  const handleFilter = (event) => {\n    setFilter(event.target.value)\n  }\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumChange = (event) => {\n    setNewNum(event.target.value)\n  }\n  const filter = persons.filter(person => person.name.toLowerCase().includes(newFilter))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage}></Notification>\n      <Filterform filter={handleFilter} newFilter={newFilter} />\n      <h2>Add new</h2>\n      <Addform addName={addName} newName={newName} handleNameChange={handleNameChange}\n        newNum={newNum} handleNumChange={handleNumChange} />\n      <h2>Numbers</h2>\n      <NameListForm filter={filter} delName = {delName}/>\n\n    </div>\n  )\n\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}